<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PHP on Leandro Peçanha Scardua</title>
    <link>https://leandropecanhascardua.github.io/tags/php/</link>
    <description>Recent content in PHP on Leandro Peçanha Scardua</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt</language>
    <lastBuildDate>Sun, 14 Aug 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://leandropecanhascardua.github.io/tags/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Procurando (e encontrando) bugs no código fonte sem rodar o aplicativo - Análise estática de código com graudit</title>
      <link>https://leandropecanhascardua.github.io/artigos/graudit/</link>
      <pubDate>Sun, 14 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://leandropecanhascardua.github.io/artigos/graudit/</guid>
      <description>&lt;p&gt;Quer um jeito certo de encontrar bugs? Analise o código fonte!&lt;/p&gt;
&lt;p&gt;Bem, é isso que a análise estática de código pretende fazer procurando por padrões dentro código e avisando quando esses
padrões são encontrados.&lt;/p&gt;
&lt;p&gt;Com o apoio de uma ferramenta como o &lt;strong&gt;graudit&lt;/strong&gt; isso pode ser fácil demais da conta!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Avaliando a qualidade do código PHP com Phploc</title>
      <link>https://leandropecanhascardua.github.io/artigos/phploc/</link>
      <pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://leandropecanhascardua.github.io/artigos/phploc/</guid>
      <description>&lt;p&gt;Em muitas situações é necessário entrar em contato com código desconhecido, desenvolvido por outra pessoa.&lt;/p&gt;
&lt;p&gt;Como etapa preliminar, pode ser útil obter estatísticas que informem algo sobre o código ,
seja como medida de qualidade ou como informação da estruturação do código.&lt;/p&gt;
&lt;p&gt;Há várias ferramentas que calculam métricas para um sistema ou aplicação. Para
projetos desenvolvidos em PHP vamos usar a ferramenta mais simples que existe: o phploc&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Debugando aplicações PHP usando phpdbg - parte 02</title>
      <link>https://leandropecanhascardua.github.io/artigos/debug_phpdgb-parte02/</link>
      <pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://leandropecanhascardua.github.io/artigos/debug_phpdgb-parte02/</guid>
      <description>&lt;p&gt;Embora possamos criar aplicações de linha de comando em PHP, o ambiente mais comum é em
aplicações web.&lt;/p&gt;
&lt;p&gt;Assim, precisamos usar ou simular um contexto web para explorar nosso código. É isso o que
faremos agora.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Debugando aplicações PHP usando phpdbg - parte 01</title>
      <link>https://leandropecanhascardua.github.io/artigos/debug_phpdgb-parte01/</link>
      <pubDate>Sat, 11 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://leandropecanhascardua.github.io/artigos/debug_phpdgb-parte01/</guid>
      <description>&lt;p&gt;O PHP é uma linguagem voltada para a web e vem daí sua força, desde sua criação. O que é sua força, também é sua fraqueza e a depuração de erros pode se tornar
uma experiência difícil para os iniciantes.&lt;/p&gt;
&lt;p&gt;O PHP tem ferramentas para auxiliar o programador a encontrar e corrigir os erros, entre eles o Xdebug e o phpdbg.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Habilitando a compilação JIT (Just In Time) para o PHP8 no Ubuntu</title>
      <link>https://leandropecanhascardua.github.io/dicas/habilitando-a-compila%C3%A7%C3%A3o-just-in-time-jit-no-php-8-usando-ubuntu/</link>
      <pubDate>Sun, 05 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://leandropecanhascardua.github.io/dicas/habilitando-a-compila%C3%A7%C3%A3o-just-in-time-jit-no-php-8-usando-ubuntu/</guid>
      <description>&lt;p&gt;O recurso Just In Time foi adicionado à versão 8 do PHP lançada em 2020 e promete ganhos interessantes de performance.&lt;/p&gt;
&lt;p&gt;Esse recurso pode ser entendido como uma evolução do OPCache (que já existe) e que permite guardar
um trecho de código já processado em memória compartilhada, eliminando alguns passos de processamento para melhorar a performance.&lt;/p&gt;
&lt;p&gt;O Just In time, porém, é um passo além: Ele permite guardar um trecho já processado diretamente código binário nativo para a máquina, eliminando momentaneamente o interpretador para turbinar a aplicação!&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>